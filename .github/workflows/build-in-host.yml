name: omniedge build in host machine

on:
  workflow_dispatch:
    inputs:
      env:
        description: env of the action
        default: prod
        required: false
      tag:
        description: tag ( if tag is not empty, env is always prod)
        required: false

jobs:
  build:
    name: Build on ${{ matrix.os }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.env || 'dev' }}
      TAG: ${{ github.event.inputs.tag }}
    strategy:
      matrix:
        os: [ ubuntu-18.04,ubuntu-20.04,macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: setup env to prod if tag is not empty
        if: ${{ env.TAG }}
        run: |
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV

      - name: Checkout without tag
        if: ${{ !env.TAG }}
        uses: actions/checkout@master

      - name: Checkout with tag
        uses: actions/checkout@master
        if: ${{ env.TAG }}
        with:
          ref: ${{ env.TAG }}

      - name: Show CPU Model and Free Space
        if: ${{ !matrix.os == 'macos-latest' }}
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h

      - name: Show system info
        run: |
          echo -e "system info: $(uname -a)"

      - name: setup golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.6'

      - name: go mod download
        run: |
          go mod download

      - name: make
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo -E apt-get -y update
          sudo -E apt-get install -y openssl
          sudo -E apt-get install -y build-essential
          sudo -E apt-get install -y libssl-dev
          sudo -E apt-get install -y zip
          make generate
          BUILD_ENV=${{ env.ENVIRONMENT }} make build
          zip -j ./omniedgecli-${{ matrix.os }}.zip ./out/omniedge

      - name: make
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install autoconf automake libtool
          make generate
          BUILD_ENV=${{ env.ENVIRONMENT }} make build-darwin
          zip -j ./omniedgecli-${{ matrix.os }}.zip ./out/omniedge

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: ./out/omniedge

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ env.TAG }}
        with:
          token: ${{ secrets.GIT_HUB_TOKEN}}
          files: omniedgecli-${{ matrix.os }}.zip
          tag_name: ${{ env.TAG }}