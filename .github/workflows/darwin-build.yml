name: omniedge macos build

on:
  push:
    branches:
      - dev
  workflow_dispatch:
    inputs:
      envName:
        description: env of the action
        default: dev
        required: true

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.event.inputs.envName || 'dev' }}
    outputs:
      release_tag: ${{ steps.assemble_artifact.outputs.release_tag }}
    steps:
      - name: Assemble Artifact
        id: assemble_artifact
        env:
          TZ: Asia/Shanghai
        run: |
          time=$(date +%Y%m%d%H)
          release_tag="$time-${{ env.ENVIRONMENT }}"
          echo "::set-output name=release_tag::$release_tag"

  build:
    name: Build on ${{ matrix.os }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.envName || 'dev' }}
    strategy:
      matrix:
        os: [ macos-latest ]
    runs-on: ${{ matrix.os }}
    needs: create-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Assemble Artifact
        id: assemble_artifact
        env:
          TZ: Asia/Shanghai
        run: |
          time=$(date +%Y%m%d%H)
          release_tag="$time-${{ env.ENVIRONMENT }}"
          echo "::set-output name=release_tag::$release_tag"

      - name: Show system info
        run: |
          echo -e "system info: $(uname -a)"

      - name: setup golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.6'

      - name: go mod download
        run: |
          go mod download

      - name: make
        run: |
          brew install autoconf automake libtool
          make generate
          BUILD_ENV=${{ env.ENVIRONMENT }} make build-darwin
          zip -j ./omniedgecli-${{ matrix.os }}.zip ./out/omniedge

      - name: Upload Release Asset
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token:  ${{ secrets.GIT_HUB_TOKEN }}
          file: ./omniedgecli-${{ matrix.os }}.zip
          asset_name: omniedgecli-${{ matrix.os }}.zip
          overwrite: true
          tag: ${{ needs.create-release.outputs.release_tag }}
