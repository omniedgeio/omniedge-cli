name: omniedge armv7 build

on:
  push:
    branches:
      - dev
  workflow_dispatch:
    inputs:
      envName:
        description: env of the action
        default: dev
        required: true

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.event.inputs.envName || 'dev' }}
    outputs:
      release_tag: ${{ steps.assemble_artifact.outputs.release_tag }}
    steps:
      - name: Assemble Artifact
        id: assemble_artifact
        env:
          TZ: Asia/Shanghai
        run: |
          time=$(date +%Y%m%d%H)
          release_tag="$time-${{ env.ENVIRONMENT }}"
          echo "::set-output name=release_tag::$release_tag"

  build:
    name: Build on ${{ matrix.os }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.envName || 'dev' }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    needs: create-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Show CPU Model and Free Space
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
      - name: Show system info
        run: |
          echo -e "system info: $(uname -a)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: omniedge-saas-cli-armv7
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ matrix.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ matrix.os }}-build-${{ env.cache-name }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm/v7
          push: false
          load: true
          file: docker/Dockerfile-ubuntu-armv7
          build-args: |
            BUILD_ENV=${{ env.ENVIRONMENT }}
          tags: cli:0.1
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: run binfmt
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install all

      - name: run cli
        run: |
          docker run --name omniedge -t -d cli:0.1
      - name: copy file
        run: |
          docker cp omniedge:/app/out/omniedge .
      - name: zip
        run: |
          zip -j ./omniedgecli-armv7.zip ./omniedge

      - name: Upload Release Asset
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GIT_HUB_TOKEN }}
          file: ./omniedgecli-armv7.zip
          asset_name: omniedgecli-armv7.zip
          overwrite: true
          tag: ${{ needs.create-release.outputs.release_tag }}

